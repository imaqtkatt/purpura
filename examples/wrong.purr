data Either(a, b) {
  Left(a),
  Right(b),
}

data Option(a) {
  Some(a),
  None(),
}

# this function had a bug where it called the unification function recursively and infinitely
sig unwrap : Option(Number) -> Number
def unwrap x =
  match x case {
    None() => x,
    Some(x) => x,
  }
